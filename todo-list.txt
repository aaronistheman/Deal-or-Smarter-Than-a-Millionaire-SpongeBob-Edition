Next:
-implement answering a question correctly and moving on
    --cursor
        --sound effects in moving the cursor
    --show case open with random money amount
        --show effect on money display
    --consider doing something about the selector while it is on
        a label of an answered question
    --change background music depending on how many questions have
        been answered
-allow picking of a helper
-make more questions
-implement peeking
-implement ask the audience
-implement phone a friend
-implement saving
-make sure:
    --SpongeBob explains the controls for using a source of help
    --sources of help can only be used once
-implement losing (i.e. player answered the question incorrectly
    and wasn't saved) and leaving with nothing
-banker makes a deal
    --user has two options
-after ten questions, user can leave with case or try to answer
    million dollar question

At some point:
-effects as canvases appear or disappear (e.g. fading)
    --and maybe even between speakers (could maybe hide and then show
        as a trick)
-look into that one error that always pops up in the console
-make class MoneyData?
    --this can be used to update both MoneyDisplay and
        BriefcaseDisplay
-replace use of ParameterError() with an alert and the throwing
    of an unhandled exception
    --update affected functions' contracts

After game is playable (or, perhaps, ready for release 0.1):
-fake static advertisement panel on the side
    --could advertise some of my YouTube videos
-more decorated title screen
-a guide to each assistant that can be unlocked by reaching a certain
 high score (using local storage)
    --can use another canvas for this guide
-consider making my own graphics for some things (e.g. briefcases)
    --in this case, consider resource identifiers for the images

Before release 0.1:
-make sure trivial functions that are no longer needed and that were
 made for the purpose of testing have been erased in game-show-fusion.js
-erase commented out methods of MoneyDisplay (around lines 96-99)
-update readme
-put release number on each file
-YouTube video; put link in readme

Considerable:
-making the game work on Safari 5 for Windows
-put truly private and priviledged members/functions in classes
-CSS classes for manipulating the color of the background of certain
    canvases
-use more web fonts
-low volume coughing if a certain answer is highlighted (as a
    reference to the fraud in Who Wants to be a Millionaire)
-separating Questions into three classes: Questions, QuestionsLabelDisplay,
    QuestioningDisplay
-allowing up/down keys to be used in choosing briefcase
    --ensure that SpongeBob explains this
-attaching the playing of sound effects to the class methods (e.g.
    BriefcaseDisplay::EmphasizePreviousCase())
    --this was already done with drawQuoteText()
-moving quote bubble code into its own file