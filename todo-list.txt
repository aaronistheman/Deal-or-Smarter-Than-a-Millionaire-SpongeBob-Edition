Next:
-make a state stack (that is, a canvas stack) object
    --consider making a remove function for array of canvases
        --OR update remove()'s contract
    --use private and priviledged methods/members
    --maybe a function for toggling the showing of a canvas
    --implement the class in the game
        --in its initialization, it'll show what need be shown
-put error-handling code in error-handling.js
-again consider a developed QuoteBubble object
    --drawQuoteText() could stay in game-show-fusion.js (and either
        stand alone or be added to the prototype)
-show case display for explaining next part of rules
-disabling the ability of the user to hold Enter to rush through the
 quotes (to prevent accidents, although disabling this feature prevents
 players from controlling their gameplay speed)
    --this could be fixed with one second delay between setting enter
      action

At some point:
-more decorated main menu
-make sure trivial functions that are no longer needed and that were
 made for the purpose of testing have been erased
-a guide to each assistant that can be unlocked by reaching a certain
 high score (using local storage); link in introduction
-put private and priviledged members/functions in classes
-eliminate the use of a scene
-background image (behind the game) changes (e.g. one of the images
 could be of Bikini Bottom underwater)
-fake advertisement panel on the side
    --could advertise some of my YouTube videos

Ideas for millionaires to be able to choose as assistants:
-Kevin O'Leary ("Mr. Wonderful")
-Mr. Burns

Considerable:
-making the game work on Safari 5 for Windows
-having a global variable for each canvas
-using alerts if exceptions
-find a way to deal with splitting a word between lines (besides
    having to put extra whitespace)
    --could limit quotes to one line
-if multiple toggles, make something to generate the layout of a
 toggle function (e.g. including the check of precondition error)
-turning each contract into a full one
-generating proper file header in add-file script
-generating script files to include in both index.html and
    unit-tests.html with AngularJS
-get canvas ids in AngularJS code by using CanvasStack.CONSTANTS

Game flow:
-host introduces himself and game
-host shows you the Deal or No Deal money screen
-host explains the rules
    --you pick a case
    --you pick a question and try to answer it
    --each correct answer leads to a case with a random money amount
      being opened
    --after every two questions, the banker (Mr. Krabs) makes a deal
    --if you miss a question and are not saved, you leave with nothing
    --if you get past all ten questions, you have the option of either
        taking your case home or going for the million dollar question
-host says you do have help
    --host introduces five helpers who can save you or let you cheat
    --host tells you of two lifelines (ask audience and phone a friend)
        --phoning a friend cuts to Patrick asking if its Pizza Castle
-you pick your case
-host shows you the randomly generated question screen